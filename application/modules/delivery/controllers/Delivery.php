<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');

/**
 * Created by Console.
 * User: Droideve Technology
 * Date: {date}
 * Time: {time}
 */

class Delivery extends MAIN_Controller {

    private $module = "delivery";

    public function __construct(){
        parent::__construct();
        $this->init($this->module);

    }

    public function onLoad()
    {

        $this->load->model('delivery/delivery_model','mDeliveryModel');
        $this->load->model('nsorder/nsorder_model','mOrderModel');
        $this->load->helper('delivery/delivery');


        define('MANAGE_DELIVERY_USERS','manager_delivery_users');
        define('MANAGE_DELIVERY_PAYOUTS','manage_delivery_payouts');

    }

    public function onCommitted($isEnabled)
    {

        if(!$isEnabled)
            return;

        TemplateManager::registerMenu(
            'delivery',
            "delivery/menu",
            4
        );

        $this->register_modules();

        @$this->init_delivery_checkout();


        ActionsManager::register('order_payment','payment_invoice_generated',function ($invoice){
           $this->mDeliveryModel->calculate_commission($invoice);
        });

        //setup Counter delivery
        if(ModulesChecker::whenIsActive("cms") && $this->mUserBrowser->isLogged()){

            $this->load->helper('cms/charts');
            SimpleChart::add('delivery','chart_v1_home',function ($months){

                if(GroupAccess::isGranted('delivery')){
                    return $this->mDeliveryModel->getOrdersToBeDelivered();
                }else{
                    return $this->mDeliveryModel->getOrdersToBeDelivered($this->mUserBrowser->getData('id_user'));
                }

            });

        }

        //disable subscription for delivery men
        $this->mDeliveryModel->disable_subscription();


        ConfigManager::setValue("DELIVERY_ANDROID_LINK","",TRUE);
        ConfigManager::setValue("DELIVERY_IOS_LINK","",TRUE);

    }



    private function init_delivery_checkout(){

        $pdc_cf_id = intval(ConfigManager::getValue("product_default_checkout_cf"));

        if($pdc_cf_id == 0){
            $pdc_cf_id = $this->mDeliveryModel->create_default_checkout_fields();
            if($pdc_cf_id>0){
                ConfigManager::setValue("product_default_checkout_cf",intval($pdc_cf_id));
            }
        }

    }

    private function register_modules(){

    }

    public function cron(){

        $this->mDeliveryModel->manage_payout();
    }

    public function onEnable()
    {
        $this->mDeliveryModel->create_report_status();
        $this->mDeliveryModel->generate_db_grp();

        ConfigManager::setValue("DELIVERY_FEES_TYPE","disabled",TRUE);
        ConfigManager::setValue("DELIVERY_FEES_VALUE",0,TRUE);


        GroupAccess::registerActions("delivery",array(
            MANAGE_DELIVERY_USERS,
            MANAGE_DELIVERY_PAYOUTS,
        ));

        return parent::onEnable(); // TODO: Change the autogenerated stub
    }

    public function onInstall()
    {

        $result = $this->mDeliveryModel->verify_pid();
        ConfigManager::setValue("DELIVERY_MODULE_PID","");

        if($result[Tags::SUCCESS] == 0){
            return array(
                Tags::SUCCESS=>-1,
                "callback" => "quickVerifySPK",
                "input" => site_url("delivery/ajax/set_pid"),
            );
        }

        $this->mDeliveryModel->createTables();
        $this->mDeliveryModel->updateFields();
        $this->mDeliveryModel->update_products_cf();

        return TRUE;
    }

    public function onUpgrade()
    {

        $result = $this->mDeliveryModel->verify_pid();
        ConfigManager::setValue("DELIVERY_MODULE_PID","");

        if($result[Tags::SUCCESS] == 0){
            return array(
                Tags::SUCCESS=>-1,
                "callback" => "quickVerifySPK",
                "input" => site_url("delivery/ajax/set_pid"),
            );
        }

        $this->mDeliveryModel->createTables();
        $this->mDeliveryModel->updateFields();
        $this->mDeliveryModel->create_report_status();
        $this->mDeliveryModel->update_products_cf();

        return TRUE;
    }


}

/* End of file UploaderDB.php */